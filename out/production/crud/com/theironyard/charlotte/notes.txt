<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User</title>
</head>
<body>
<form action="/logout" method="post">
    <button type="submit">Logout</button>
</form>

Welcome, {{name}}
<form action="/create-card" method="post">
    <input type="text" placeholder="Name" name="cardName"/>
    <input type="text" placeholder="Year" name="year"/>
    <input type="text" placeholder="Type" name="type"/>
    <input type="text" placeholder="Condition" name="condition"/>
    <button type="submit">Add</button>
</form>
<ol>
    {{#cardList}}
    <li>
        <form action="/delete/{{id}}" method="post">
            <input type="hidden" value="{{id}}" name="id"/>
            <button type="submit">Delete</button> {{name}} {{year}} {{type}} {{condition}} <a href="/update-card/{{id}}">  Edit</a>
        </form>
    </li>
    {{/cardList}}
</ol>

</body>
</html>

UPDATE.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Edit</title>
</head>
<body>
<form action="/logout" method="post">
    <button type="submit">Logout</button>
</form>

Welcome, {{name}}
    <form action="/update-entry/{{id}}" method="post">
        <input type="text" placeholder="Title" name="title"/>
        <input type="text" placeholder="Author" name="author"/>
        <button type="submit">Add</button>
    </form>


</body>
</html>

        Spark.post(
                "/update-card/:id",
                ((request, response) -> {
                    Session session = request.session();

                    String name = session.attribute("name");

                    User user = users.get(name);
                    if (user == null) {
                        throw new Exception("User is not logged in");
                    }

                    String idValue = request.params("id");
                    int indexNumber = Integer.valueOf(idValue);

                    for (int i = 0; i < user.cardList.size(); i++) {
                        if (user.cardList.get(i).getId() == indexNumber) {
                            Card userCard = user.cardList.get(i);

                            String cardName = request.queryParams("cardName");
                            int year = Integer.valueOf(request.queryParams("year"));
                            String type = request.queryParams("type");
                            String condition = request.queryParams("condition");

                            userCard.setName(cardName);
                            userCard.setYear(year);
                            userCard.setType(type);
                            userCard.setCondition(condition);

                            user.cardList.set(i, userCard);
                        }
                    }

                    response.redirect("/");

                    return "";
                })
        );

        Spark.get(
                "/update-card/:id",
                ((request, response) -> {
                    Session session = request.session();

                    String name = session.attribute("name");

                    String idValue = request.params("id");
                    int indexNumber = Integer.valueOf(idValue);

                    User user = users.get(name);

                    HashMap m = new HashMap();
                        m.put("id", indexNumber);
                        m.put("name", user.name);
                        return new ModelAndView(m, "edit.html");
                }),
                new MustacheTemplateEngine()
        );